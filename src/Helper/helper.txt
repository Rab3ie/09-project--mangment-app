Break section 9 (lec 154)
end section 9 (lec 157)

149-
	1-create comp floder
	2-create "ProjectSidebar" comp
	3-<aside> -> <h2>"Your Projects,<div> -> <button>"+ Add Project", <ul>
	4-at "App" comp add "ProjectSidebar"  comp 
	5-<main> -> <"ProjectSidebar"> 
150-
	1-mainCN#" asidCN#"
	2-at "ProjectSidebar comp add CN#"text-stone-200"
	3-buttonCN#"bg-stone-700" "hover: bg-stone-600"
	
151-
	1-Add new comp "NewProject"
	2-<div> -> (<menu> -> <button>"Cancel", <button>"Save"), 
	(<div> -> (<p> -> (<label>#"Title", <input>), (<p> -> 		(<label>#"Description", <textarea>),
	(<p> -> (<label>#"Due Date", <input>))
	3-Add new comp"Input" has prop"textarea, label, ...props"
		-<p> ->
		-<label>{label},
		-{textarea ? <textarea {...props} /> : <input{...props}/>}
		-
152-
	1-at "NewProject" comp style
		1-div CN"[w-35]"
		2-menu CN"fle item- center justify-en gap-4"
		3-cancel button CN"hover hover:textStone-950"
		4-save button bg-stone-800 hover :950 [px-6 py-2]
		5-at "Input" comp 
		6-p CN"flex fle-col- gap-1 my-4"
		7-label cn#"upperCase text-stone-500"
		8-<textarea and input" CN#"w-full p-1 border-b-2 rounded-sm border-stone-300 bg-stone-200 text-stone-600 foucs:outline-none foucs:border-stone-600"
153-
	1-create "NoProjectSelected" comp
	2-at "NoProjectSelected" add <div>
	3- -> <img>
	4- , <h2> "No Poject Selected
	5-, <p>
	6- -> <button> Create New Project
	7- div CN#"w-2/3"
	8- img Import noProjectImage CN#"
	9-h2 CN#" text-stone-500 my-4
	10- pCN#"text-stone-400 mb-4"
	11 p-> button CN#" mt-8"
	12-buttonCN# "Button" comp
	13-create a "Button" comp props {childern, ...props}
		1-copy the button form "NewProject"
154-
	1-at "App" comp will create state (useState)
	2-["projectsSTate, setProjectsState] =  {slectedProjectId: undefiend,
				projects: []}
	3-ad func "handStartAddProject(){
		setProjectsState()
	}
155-
	1-at "NewProject" comp 
	2-will use useRef create three 
		-titleRef
		-descriptionRef
		-dueDateRef
	3-at "Input" comp
		1-use forwardref
		2-at textarea and input add ref and assign to "ref" prop
	4- at "NewProject" comp
		1-assign -titleRef,-descriptionRef,-dueDateRef
		2-creat function "handleSave"
		3-and connected to "Save" Button
		4-at function handlesave
			1-enterted title to titleRef and so on ...
			2-//validation
		5- at "App" comp
			1-create function "handleAddProject"
			2-at handleAddProject 
				1-use setProjectsState
				2-create a variable "newPorject" wih id" Math.random()
			3-at "NewProject" comp
				1-create porp "onAdd"
				2-at handleSave use the onAdd as an object

156-
	1-at "App" comp
		1-remove conslo.log
		2-jsx "ProjectSidebar" 
		3-add prop "projects"
		4-pass to "projectState.projects"
	2-at "ProjectSidebar" comp
		1-und <div> create <ul>
		2-create "projects" prop and use .map()
		3- has button with style "w-full text-left text-stone-400 hover:text-stone-200"
		4-ul CN#"mt-8"
157-
	1-at "NewProject" comp 
		1-at handlesave func
			1-if(empty)
			2-action will be/ //error modal
	2-create "Modal" comp
		1-has dialog and has childern
Start lec(158)
end lec(161)
158-
	1-at "Modal" comp
		1-style dialog "backdrop"
		2-form " mt-4 text-right
		3-Button import Button Tag and imported with styles
	2-at "App" comp
		1-create func "handleCancelAddProject"
			1-comp statment of "handleStartAddProject"
			2-set slectedProjectId: undefiend
			3-at "NewProject" pass OnCnacel as prop with "handleCancelAddProject"
	3-at "NewProject" comp
		1-add "onCancel" prop
		2-pass it to Button with "Modal" comp
159-
	1-create a new "SelectedProject" comp
		1-div CN#"w-35 mt-16"
			1-headerCN"pb-4 mb-4 border-b-2 border-stone=300"
				1-divCN#"flex item-center justify"
					1-h1{project.title} CN"text-3xl"
					2-Button"Delete" CN"text-stone-600 hover:950"
				2-p{Project.dueDate}CN#"text-stone-400"
					1-create const"fomratedDate" and use object Date
				3-p{project.discroption}CN"#text-stone-600 white-space"
		2-Tasks
		3-create "project" prop as object
	2-at"App" comp
		1-new func "handleSelectProject" (id)
			1-copy func "handleStartAddProject"
			2- edit "SelectedProjectId" "id"
		2-pass the fun "handleSelectProject" to "ProjectSidebar" Tag
		3-with prop "onSelectProject" and value" handleSelectProject"
	3-at "ProjectSidebar" comp
		1-create prop"onSelectProject"
		2-at button Project.title onClick{onSelectProject}
		3-create "SelectedProjectId" prop
		4-edit project.map and make a condtitnal for "SelectedProjectId"
		5-create let "cssClasses" 
		6-make conditional "cssClasses" CN#"bg-stone-800 text-stone-200"
		7-remove text-stone-400 and added to else
	4-at "App" comp
		1-set default content "<SelectProject Project{} />
		2-create const"selectProject"
			1-projectState.Projects.find(project => project.id === projectState.slectedProjectId)
		3-Project{selectProject}
160-
	1-at "App" comp
		1-create fun "handleDeleteProject"
			1-copy "handleAddProject"
			2-edit SelectedProjectId "undefiend"
			3-projects: prevState .projects.filter((project) => project.id !== prevState.SelectedProjectId )
		2-create "SelectProject" tag "onDelete" prop"
		3-pass handleDeleteProject to it
	2-at "SelectedProject" comp
		1-create "onDelete" prop
		2-cerate onClick at Delete button
		3-pass "onDelete" prop to it
161-
	1-create "Tasks" comp
		1-section
			1-h2#"Tasks"CN#"text-2xl text-stone-700"
			new Tasks
			2-p#"This project doesn't have any tasks yet"CN#"text-stone-800 my-4"
			3-ul
	2-at "SelectProject" comp
		1-instead of Tasks
		2-use "Tasks" comp
	3-create "NewTask" comp
		1-divCN#"flex - item-center gap-4"
			1-input CN#"w-64 px-2 py-1 rounded-sm bg-stone-200"
			2-button"Add Task"text-stone-700 hover: text-stone-950"
	4-at "Tasks" comp
		1-replace newTask with "NewTask tag
162-
	1-at "NewTask" comp
		1-create useState ["enteretdTask, setEnteretedTask"]
		2-create function handleChange (event)
			1-setEnteretedTask(event.traget.value)
		3-input onChange={handleChange} , value={enteretdTask}
	2-at "App" comp
		1-create task objectkey of useState
		2-create function handleAddTask
		3-create function handleDeleteTask
	3-at "NewTask" comp
		1-create function "handleClick"
			1-setEnteretedTask('')
	4-at "App" comp
		1-"SelectProject" tag add prop onAddTask={handleAddTask}
		2-"SelectProject" tag add prop onDeleteTask={handleDeleteTask}
	5-at "SelectProject" comp
		1-create props "onAddTask, onDeleteTask"
		2-"Tasks" tag add prop onAdd={onAddTask}
		3-"Tasks" tag add prop onDelete={onDeleteTask}
	6-at "Tasks" comp
		1-create props"onAdd, onDelete"
		2-"NewTask" tag create prop onAdd={onAdd}
		2-"NewTask" tag create prop onDelete={onDelete}
	7-at "NewTask" comp
		1-create props "onAdd, onDelete"
		2-at function "handleClick"
			1-add onAdd(enteretdTask)
	8-at "App" comp
		1-function handleAddTask(text)
			1-copy function handleAddProject
			2-edit projectId to "taskId"
			3-edit newPorject to "newTask"
			4-delete projectData to text:text
			5- id: taskId
			6-projectId: prevState.SelectedProjectId
			7-at return delete projects
			8-tasks: [...prevState.tasks, newTask]
			9-delete SelectedProjectId at return
	9-at "NewTask" comp
		1-create tasks prop
		2-conritionally if tasks.length ===0 set p tag
		3-else tasks.length > 0 render ulCN#"p-4 mt-8 bg-stone-100 tag
		4-tasks.map((task) => <liCN#"flex justfiy-between my-4" key={task.id}>
		span{task.text} span buttonCN#"text-stone-700 hover:text-stone-red-500 Clear button</li> )
163-
	1-at "App" comp
		1-handleDeleteTask func
			1-
			


		


		


			